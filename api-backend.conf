# Configuraci√≥n nginx - HTTPS en puerto 444
# upstream backend_api {
#     server 127.0.0.1:8443;
# }

# Redirect HTTP to HTTPS:444
server {
    listen 80;
    server_name apekapital.com www.apekapital.com;
    
    # Redirigir a HTTPS en puerto 444
    location / {
        return 301 https://$server_name:444$request_uri;
    }
}

# HTTPS Server en puerto 444
server {
    listen 444 ssl;
    server_name apekapital.com www.apekapital.com;
    
    # SSL Certificates - Let's Encrypt
    ssl_certificate     C:/nginx/nginx-1.24.0/certs/apekapital.com-chain.pem;
    ssl_certificate_key C:/nginx/nginx-1.24.0/certs/apekapital.com-key.pem;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    
    # Headers
    add_header Strict-Transport-Security "max-age=31536000" always;
    
    # Proxy al backend
    location / {
        proxy_pass http://backend_api;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS headers are handled by the backend
        # Don't add duplicate headers here
    }
    
    # Health check
    location /health {
        proxy_pass http://backend_api/health;
        access_log off;
    }
}
