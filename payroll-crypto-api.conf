# Configuración NGINX para payroll-crypto-api
# Subdominio: whapy.apekapital.com en puerto 445

# Upstream backend para la payroll-crypto-api
upstream payroll_crypto_backend {
    least_conn;
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP Server - Redirect to HTTPS:445
server {
    listen 80;
    server_name whapy.apekapital.com;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root C:/nginx/nginx-1.24.0/html;
        allow all;
    }
    
    # Redirect to HTTPS on port 446
    location / {
        return 301 https://$server_name:446$request_uri;
    }
}

# HTTPS Server - Payroll Crypto API
server {
    listen 446 ssl http2;
    server_name whapy.apekapital.com;
    
    # SSL Configuration - Let's Encrypt certificates
    ssl_certificate     C:/nginx/nginx-1.24.0/certs/whapy.apekapital.com-chain.pem;
    ssl_certificate_key C:/nginx/nginx-1.24.0/certs/whapy.apekapital.com-key.pem;
    
    # SSL Optimizations
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL_PAYROLL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers - commented out to avoid conflicts with Express helmet headers
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header X-XSS-Protection "1; mode=block" always;
    # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS Headers handled by Express backend - removed from NGINX to avoid duplication
    
    # API endpoints con rate limiting
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=crypto_api_limit burst=20 nodelay;
        
        # Pass OPTIONS requests to backend for CORS handling
        # Backend Express handles all CORS headers
        
        # Proxy settings
        proxy_pass http://payroll_crypto_backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 446;
        proxy_set_header Connection "";
        
        # Timeouts optimizados para operaciones crypto
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;  # Tiempo extra para operaciones blockchain
        proxy_read_timeout 120s;  # Tiempo extra para verificaciones de transacciones
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # No cache para operaciones críticas de crypto
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Logs específicos para debugging
        access_log C:/nginx/nginx-1.24.0/logs/payroll-crypto-access.log;
        error_log C:/nginx/nginx-1.24.0/logs/payroll-crypto-error.log;
    }
    
    # Auth endpoints con rate limiting más estricto
    location /api/users/ {
        limit_req zone=crypto_auth_limit burst=5 nodelay;
        
        proxy_pass http://payroll_crypto_backend;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # No caching para auth endpoints
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        
        # Timeouts más cortos para auth
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Wallet endpoints con configuración específica
    location /api/wallet/ {
        limit_req zone=crypto_api_limit burst=10 nodelay;
        
        proxy_pass http://payroll_crypto_backend;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Timeouts extendidos para operaciones blockchain
        proxy_connect_timeout 15s;
        proxy_send_timeout 180s;  # Transacciones pueden tardar
        proxy_read_timeout 180s;
        
        # No caching para wallets
        proxy_no_cache 1;
        proxy_cache_bypass 1;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://payroll_crypto_backend/health;
        proxy_http_version 1.1;
        access_log off;
        
        # Cache muy corto para health checks
        proxy_cache_valid 200 5s;
        
        # Timeouts cortos
        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Root endpoint - API documentation
    location = / {
        proxy_pass http://payroll_crypto_backend/;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        
        # Cache corto para documentación
        proxy_cache_valid 200 1m;
    }
    
    # Bloquear accesos no autorizados
    location ~* \.(env|log|git|sql|bak)$ {
        deny all;
        return 404;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root C:/nginx/nginx-1.24.0/html;
        internal;
    }
    
    location = /50x.html {
        root C:/nginx/nginx-1.24.0/html;
        internal;
    }
}