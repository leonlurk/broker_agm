worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use select;
    multi_accept on;
}

http {
    map_hash_bucket_size 128;
    include       mime.types;
    default_type  application/octet-stream;

    # --- Map CORS permitido ---
    map $http_origin $cors_origin {
        default "";
        "https://broker-agm.netlify.app" $http_origin;
        "https://agm-alphaglobalmarket.netlify.app" $http_origin;
    }

    # Logs optimizados
    access_log logs/access.log;
    error_log logs/error.log warn;

    # TCP optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Timeouts
    keepalive_timeout 65;
    keepalive_requests 100;
    reset_timedout_connection on;
    client_body_timeout 10;
    send_timeout 10;

    # Buffers
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    output_buffers 32 32k;
    postpone_output 1460;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml text/javascript application/x-javascript application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/x-icon;
    gzip_disable "msie6";

    # Cache settings
    proxy_cache_path C:/tmp/nginx_cache levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=10r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Rate limiting zones for crypto API
    limit_req_zone $binary_remote_addr zone=crypto_api_limit:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=crypto_auth_limit:10m rate=10r/m;

    # Backend upstream
    upstream backend_api {
        least_conn;
        server 127.0.0.1:8443 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Include additional site configurations
    include C:/nginx/nginx-1.24.0/conf/sites-enabled/*.conf;

    # HTTP Server - Redirect to HTTPS
    server {
        listen 80;
        server_name apekapital.com www.apekapital.com;

        location /.well-known/acme-challenge/ {
            root C:/nginx/nginx-1.24.0/html;
            allow all;
        }

        location / {
            return 301 https://$server_name:444$request_uri;
        }
    }

    # HTTPS Server - Main Application
    server {
        listen 444 ssl http2;
        server_name apekapital.com www.apekapital.com;

        # SSL Configuration
        ssl_certificate     C:/nginx/nginx-1.24.0/certs/apekapital.com-chain.pem;
        ssl_certificate_key C:/nginx/nginx-1.24.0/certs/apekapital.com-key.pem;

        # SSL Optimizations
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # --- API endpoints with caching and rate limiting ---
        location /api/ {

            # Handle preflight OPTIONS
            if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' $cors_origin always;
          	add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
       	  	add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-Api-Key' always;
          	add_header 'Access-Control-Allow-Credentials' 'true' always;
          	add_header 'Access-Control-Max-Age' '86400' always;
          	# add_header 'Content-Type' 'text/plain charset=UTF-8' always;
          	# add_header 'Content-Length' '0' always;
                return 204;
            }

            # CORS headers for all requests
            

            # Rate limiting
            limit_req zone=api_limit burst=50 nodelay;
            limit_conn addr 100;

            # Proxy settings
            proxy_pass http://backend_api;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Connection "";

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Cache
            proxy_cache api_cache;
            proxy_cache_valid 200 1m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status always;
        }

        # Auth endpoints with stricter rate limiting
        location /api/auth/ {

            if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' $cors_origin always;
          	add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
       	  	add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With, X-Api-Key' always;
          	add_header 'Access-Control-Allow-Credentials' 'true' always;
          	add_header 'Access-Control-Max-Age' '86400' always;
          	# add_header 'Content-Type' 'text/plain charset=UTF-8' always;
          	# add_header 'Content-Length' '0' always;
                return 204;
            }

            # CORS headers
            

            limit_req zone=auth_limit burst=5 nodelay;

            proxy_pass http://backend_api;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # No caching for auth endpoints
            proxy_no_cache 1;
            proxy_cache_bypass 1;
        }

        # Health check
        location /health {
            proxy_pass http://backend_api/health;
            access_log off;
            proxy_cache api_cache;
            proxy_cache_valid 200 5s;
        }

        # WebSocket
        location /ws {
            proxy_pass http://backend_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Static files
        location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
    }
}
